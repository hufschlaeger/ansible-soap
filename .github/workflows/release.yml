---
name: Release to Galaxy

on:
  push:
    tags:
      - 'v*'  # Triggert bei Tags wie v1.0.0

jobs:
  release:
    name: Build and Publish to Ansible Galaxy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Update galaxy.yml version
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          sed -i "s/^version:.*/version: $VERSION/" galaxy.yml

      - name: Build collection
        run: |
          ansible-galaxy collection build --force

      - name: Publish to Ansible Galaxy
        run: |
          ansible-galaxy collection publish *.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.tar.gz"
          body: |
            ## Release ${{ steps.get_version.outputs.VERSION }}

            ### Installation
            ```bash
            ansible-galaxy collection install hufschlaeger.soap_client:${{ steps.get_version.outputs.VERSION }}
            ```

            ### What's New
            See [CHANGELOG.md](CHANGELOG.md) for details.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  verify-release:
    name: Verify Galaxy Release
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: Wait for Galaxy to update
        run: sleep 60

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Install from Galaxy
        run: |
          ansible-galaxy collection install hufschlaeger.soap_client:${{ steps.get_version.outputs.VERSION }}

      - name: Verify installation
        run: |
          ansible-galaxy collection list | grep soap_client
