---
name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Ansible Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core ansible-lint
          pip install -r requirements.txt

      - name: Run ansible-lint
        run: |
          ansible-lint playbooks/examples/**/*.yml || true
        continue-on-error: true

  syntax-check:
    name: Syntax Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core
          pip install -r requirements.txt

      - name: Check playbook syntax
        run: |
          for playbook in playbooks/examples/**/*.yml; do
            echo "Checking: $playbook"
            ansible-playbook "$playbook" --syntax-check
          done

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python -m pytest tests/ -v --cov=plugins/module_utils/soap_module

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  build-collection:
    name: Build Collection
    runs-on: ubuntu-latest
    needs: [lint, syntax-check, unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: Build collection
        run: |
          ansible-galaxy collection build --force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: collection
          path: "*.tar.gz"
          retention-days: 7

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build-collection

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core
          pip install -r requirements.txt

      - name: Download collection artifact
        uses: actions/download-artifact@v4
        with:
          name: collection

      - name: Install collection
        run: |
          ansible-galaxy collection install *.tar.gz --force

      - name: Run example playbooks
        run: |
          # Nur die funktionierenden Examples testen
          ansible-playbook playbooks/examples/validation/Validate_BasicEndpoint.yml -v
          ansible-playbook playbooks/examples/request/Request_NumberToWords.yml -v
